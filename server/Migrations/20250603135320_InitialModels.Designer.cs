// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Server.Infrastructure.Entities.Context;

#nullable disable

namespace ServerSide.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250603135320_InitialModels")]
    partial class InitialModels
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Server.Infrastructure.Entities.Models.TenantModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("TENANT_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("TENENT_CREATED_AT");

                    b.Property<string>("Database")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TENANT_DATABASE");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("TENENT_DELETED_AT");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TENANT_NAME");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("TENENT_UPDATED_AT");

                    b.Property<Guid>("guid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TENANT_GUID");

                    b.HasKey("Id");

                    b.ToTable("TENANT", (string)null);
                });

            modelBuilder.Entity("Server.Infrastructure.Entities.Models.UserModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("USER_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("ActiveAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("USER_ACTIVE_AT");

                    b.Property<int>("AuthAttempts")
                        .HasColumnType("int")
                        .HasColumnName("USER_AUTH_ATTEMPTS");

                    b.Property<DateTime?>("BlockedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("USER_BLOCKED_AT");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("USER_MAIL");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("USER_NAME");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("USER_PASSWORD");

                    b.Property<Guid>("guid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("USER_GUID");

                    b.HasKey("Id");

                    b.HasIndex("Mail")
                        .IsUnique();

                    b.ToTable("USER", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            ActiveAt = new DateTime(2025, 6, 3, 13, 53, 20, 134, DateTimeKind.Utc).AddTicks(8620),
                            AuthAttempts = 0,
                            Mail = "admin",
                            Name = "Admin",
                            Password = "admin",
                            guid = new Guid("7863d270-d001-4d7e-b999-fd7105a8f3fb")
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
